<?php

use Giuseppe\LearningLibrary\Parametric\AnomalyDetection;
use Giuseppe\LearningLibrary\Parametric\OnlineAnomalyDetection;

/**
 * Test class for AnomalyDetection.
 * Generated by PHPUnit on 2011-12-22 at 09:20:30.
 */
class AnomalyDetectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @covers \Giuseppe\LearningLibrary\Parametric\AnomalyDetection::isAnomaly()
     */
    public function testIsAnomaly()
    {
        $ad = new AnomalyDetection();
        $ad->learn(array(array(1, 2), array(2, 1), array(0, 1), array(3, 1), array(-1, 1)));

        $this->assertTrue($ad->isAnomaly(array(100, 40)));
        $this->assertTrue($ad->isAnomaly(array(-3, 2)));

        $this->assertFalse($ad->isAnomaly(array(1, 2)));
        $this->assertFalse($ad->isAnomaly(array(1.1, 2.1)));
        $this->assertFalse($ad->isAnomaly(array(0, 2.1)));
        $this->assertFalse($ad->isAnomaly(array(0, 2)));


        $value = $ad->isAnomaly(array(1, 1), false);
        $this->assertTrue($value > 0 && $value < 0.5);

    }

    /**
     * @covers \Giuseppe\LearningLibrary\Parametric\OnlineAnomalyDetection::isAnomaly()
     */
    public function testIsAnomalyOnline()
    {
        $ad = new OnlineAnomalyDetection();
        $ad->learn(array(array(1, 2), array(2, 1), array(0, 1), array(3, 1), array(-1, 1)));
        $this->assertTrue($ad->isAnomaly(array(100, 40)));
        $this->assertTrue($ad->isAnomaly(array(-3, 2)));
        $this->assertFalse($ad->isAnomaly(array(1, 2)));
        $this->assertFalse($ad->isAnomaly(array(1.1, 2.1)));
        $this->assertFalse($ad->isAnomaly(array(0, 2.1)));
        $this->assertFalse($ad->isAnomaly(array(0, 2)));

        $value = $ad->isAnomaly(array(1, 1), false);
        $this->assertTrue($value > 0 && $value < 0.5);

        $this->assertTrue($ad->isAnomaly(array(5, 6)));

        $ad->addObservation(array(5, 5));
        $ad->addObservation(array(6, 6));
        $ad->addObservation(array(5, 6));
        $ad->addObservation(array(6, 5));
        $ad->addObservation(array(4, 5));
        $ad->addObservation(array(4, 4));
        $ad->addObservation(array(8, 4));
        $ad->addObservation(array(8, 8));
        $ad->addObservation(array(4, 8));
        $this->assertFalse($ad->isAnomaly(array(5, 6)));
    }
}
